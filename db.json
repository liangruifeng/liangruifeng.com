{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1514806389000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1514806389000},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1514806389000},{"_id":"themes/next/.gitignore","hash":"0b5c2ffd41f66eb1849d6426ba8cf9649eeed329","modified":1514806389000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1514806389000},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1514806389000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1514806389000},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1514806389000},{"_id":"themes/next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1514806389000},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1514806389000},{"_id":"themes/next/README.cn.md","hash":"58ffe752bc4b7f0069fcd6304bbc2d5ff7b80f89","modified":1514806389000},{"_id":"themes/next/README.md","hash":"898213e66d34a46c3cf8446bf693bd50db0d3269","modified":1514806389000},{"_id":"themes/next/_config.yml","hash":"5ff37e90e4d6812c8fc40c03fa6e1d903d743470","modified":1514806389000},{"_id":"themes/next/bower.json","hash":"0674f11d3d514e087a176da0e1d85c2286aa5fba","modified":1514806389000},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1514806389000},{"_id":"themes/next/package.json","hash":"036d3a1346203d2f1a3958024df7f74e7ac07bfe","modified":1514806389000},{"_id":"source/_posts/linux-grep.md","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1538814886000},{"_id":"source/_posts/linux-sed.md","hash":"609a6cb670e8065ae43f4a0cbf904089815539b8","modified":1538645630000},{"_id":"source/_posts/python-函数参数.md","hash":"0acbd62ac217eedd84c486f850393f0136c27a45","modified":1538728969000},{"_id":"source/_posts/python-生成器迭代器.md","hash":"f95d6a4e7bafdb9dd4fbbb7ece69b72930842433","modified":1541337537000},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1514806389000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"352093a1b210c72136687fd2eee649244cee402c","modified":1514806389000},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"902f627155a65099e0a37842ff396a58d0dc306f","modified":1514806389000},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1514806389000},{"_id":"themes/next/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1514806389000},{"_id":"themes/next/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1514806389000},{"_id":"themes/next/languages/en.yml","hash":"7e680d9bb8f3a3a9d1ba1c9d312b3d257183dded","modified":1514806389000},{"_id":"themes/next/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1514806389000},{"_id":"themes/next/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1514806389000},{"_id":"themes/next/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1514806389000},{"_id":"themes/next/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1514806389000},{"_id":"themes/next/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1514806389000},{"_id":"themes/next/languages/nl-NL.yml","hash":"edca4f3598857dbc3cbf19ed412213329b6edd47","modified":1514806389000},{"_id":"themes/next/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1514806389000},{"_id":"themes/next/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1514806389000},{"_id":"themes/next/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1514806389000},{"_id":"themes/next/languages/vi.yml","hash":"fd08d3c8d2c62965a98ac420fdaf95e54c25d97c","modified":1514806389000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"16ef56d0dea94638de7d200984c90ae56f26b4fe","modified":1514806389000},{"_id":"themes/next/languages/zh-hk.yml","hash":"9396f41ae76e4fef99b257c93c7354e661f6e0fa","modified":1514806389000},{"_id":"themes/next/languages/zh-tw.yml","hash":"50b71abb3ecc0686f9739e179e2f829cd074ecd9","modified":1514806389000},{"_id":"themes/next/layout/_layout.swig","hash":"da0929166674ea637e0ad454f85ad0d7bac4aff2","modified":1514806389000},{"_id":"themes/next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1514806389000},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1514806389000},{"_id":"themes/next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1514806389000},{"_id":"themes/next/layout/page.swig","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1514806389000},{"_id":"themes/next/layout/post.swig","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1514806389000},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1514806389000},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1514806389000},{"_id":"themes/next/scripts/merge-configs.js","hash":"81e86717ecfb775986b945d17f0a4ba27532ef07","modified":1514806389000},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1514806389000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1514806389000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1514806389000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1514806389000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514806389000},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1514806389000},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1514806389000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1514806389000},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1514806389000},{"_id":"themes/next/layout/_macro/post.swig","hash":"446a35a2cd389f8cfc3aa38973a9b44ad0740134","modified":1514806389000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1514806389000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"6a54c3c85ff6b19d275827a327abbf4bd99b2ebf","modified":1514806389000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1514806389000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4a6f5b1792b2e5262b7fdab9a716b3108e2f09c7","modified":1514806389000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"c4d6181f5d3db5365e622f78714af8cc58d7a45e","modified":1514806389000},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b94fe8f3279daea5623c49ef4bb35917ba57510","modified":1514806389000},{"_id":"themes/next/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1514806389000},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1514806389000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1514806389000},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1514806389000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1514806389000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1514806389000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"a266f96ad06ee87bdeae6e105a4b53cd587bbd04","modified":1514806389000},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1514806389000},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1514806389000},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1514806389000},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1514806389000},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1514806389000},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1514806389000},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1514806389000},{"_id":"themes/next/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1514806389000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1514806389000},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1514806389000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1514806389000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1514806389000},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1514806389000},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1514806389000},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1514806389000},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1514806389000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1514806389000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1514806389000},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1514806389000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1514806389000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1514806389000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1514806389000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1514806389000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1514806389000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1514806389000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1514806389000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1514806389000},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1514806389000},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1514806389000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1514806389000},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1514806389000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1514806389000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1514806389000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1514806389000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1514806389000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514806389000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514806389000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514806389000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514806389000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514806389000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514806389000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514806389000},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1514806389000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1514806389000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1514806389000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1514806389000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1514806389000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1514806389000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1514806389000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1514806389000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1514806389000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1514806389000},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1514806389000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"1cd01c6e92ab1913d48e556a92bb4f28b6dc4996","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"10160daceaa6f1ecf632323d422ebe2caae49ddf","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"aa0629277d751c55c6d973e7691bf84af9b17a60","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"fcabbb241f894c9a6309c44e126cf3e8fea81fd4","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1514806389000},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1514806389000},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1514806389000},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1514806389000},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1514806389000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1514806389000},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1514806389000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1514806389000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1514806389000},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1514806389000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1514806389000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"f29165e36489a87ba32d17dddfd2720d84e3f3ec","modified":1514806389000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"29c261fa6b4046322559074d75239c6b272fb8a3","modified":1514806389000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1514806389000},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1514806389000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1514806389000},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1514806389000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1514806389000},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1514806389000},{"_id":"themes/next/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1514806389000},{"_id":"themes/next/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1514806389000},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1514806389000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1514806389000},{"_id":"themes/next/source/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1514806389000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1514806389000},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1514806389000},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1514806389000},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1514806389000},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1514806389000},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1514806389000},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1514806389000},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1514806389000},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1514806389000},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1514806389000},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1514806389000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1514806389000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1514806389000},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1514806389000},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1514806389000},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1514806389000},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1514806389000},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1514806389000},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1514806389000},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1514806389000},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1514806389000},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1514806389000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1514806389000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1514806389000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1514806389000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1514806389000},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1514806389000},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1514806389000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1514806389000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1514806389000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1514806389000},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1514806389000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1514806389000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1514806389000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"02fb8fa6b6c252b6bed469539cd057716606a787","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9d16fa3c14ed76b71229f022b63a02fd0f580958","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1514806389000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1514806389000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1514806389000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1514806389000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1514806389000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1514806389000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"262debfd4442fa03d9919ceb88b948339df03fb0","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"12937cae17c96c74d5c58db6cb29de3b2dfa14a2","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"37e951e734a252fe8a81f452b963df2ba90bfe90","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1ccfbd4d0f5754b2dc2719a91245c95f547a7652","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1514806389000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1514806389000},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1514806389000},{"_id":"public/2018/10/06/linux-grep/index.html","hash":"28c0e2e383f7a0e58d392aebc1a560856788970b","modified":1555555864327},{"_id":"public/archives/index.html","hash":"15d5d9b5074987af17c703fcaede4786658982ca","modified":1555555864327},{"_id":"public/archives/2018/index.html","hash":"6b3355a3fef97a0796ab72f3e997e29f733df4b2","modified":1555555864327},{"_id":"public/archives/2018/10/index.html","hash":"c773dbcf51fe0c0e1d713044ceccc4a2e8b48090","modified":1555555864327},{"_id":"public/archives/2018/11/index.html","hash":"dd7145bdd233d58e5cee1db72afc00b7f7b05569","modified":1555555864327},{"_id":"public/2018/11/04/python-生成器迭代器/index.html","hash":"9207ee5331b835494ed52254855cf59e08860b3b","modified":1555555864327},{"_id":"public/2018/10/05/python-函数参数/index.html","hash":"af7bae92f88dda3233622c127b50b4cd2fdc24f0","modified":1555555864327},{"_id":"public/2018/10/04/linux-sed/index.html","hash":"56326dff33819e01c4bb7e6e796be79473e1f9f5","modified":1555555864327},{"_id":"public/index.html","hash":"bee9706c2ef235f5a4dfdf0603f5ec193223d6e8","modified":1555555864328},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1555555864332},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1555555864332},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1555555864332},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1555555864332},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1555555864332},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1555555864332},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1555555864332},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1555555864332},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1555555864332},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1555555864332},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1555555864332},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1555555864333},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1555555864333},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1555555864333},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1555555864333},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1555555864333},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1555555864333},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1555555864333},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1555555864333},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1555555864333},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1555555864333},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1555555864333},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1555555864333},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1555555864333},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1555555864333},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1555555864333},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1555555864333},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1555555864333},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1555555864333},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1555555864334},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1555555864334},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1555555864334},{"_id":"public/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1555555864334},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1555555864736},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1555555864744},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1555555864754},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1555555864754},{"_id":"public/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1555555864754},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1555555864754},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1555555864754},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1555555864755},{"_id":"public/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1555555864755},{"_id":"public/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1555555864755},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1555555864755},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1555555864755},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1555555864755},{"_id":"public/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1555555864755},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1555555864755},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1555555864755},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1555555864755},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1555555864755},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1555555864755},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1555555864755},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1555555864755},{"_id":"public/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1555555864756},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1555555864756},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1555555864756},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1555555864756},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1555555864756},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1555555864756},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1555555864756},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1555555864756},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1555555864756},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1555555864756},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1555555864756},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1555555864756},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1555555864756},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1555555864756},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1555555864756},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1555555864756},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1555555864757},{"_id":"public/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1555555864757},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1555555864757},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1555555864757},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1555555864757},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1555555864757},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1555555864757},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1555555864757},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1555555864757},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1555555864757},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1555555864757},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1555555864757},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1555555864757},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1555555864757},{"_id":"public/css/main.css","hash":"14a4d87de01ef4f06d4b5875b2dc76f2973d785d","modified":1555555864757},{"_id":"public/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1555555864757},{"_id":"public/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1555555864758},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1555555864758},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1555555864758},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1555555864758},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1555555864758},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1555555864758},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1555555864758},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1555555864758},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1555555864758},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1555555864758},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1555555864759},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1555555864759},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1555555864759},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1555555864759},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1555555864759},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1555555864759},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1555555864759},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1555555864759},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1555555864759},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1555555864760},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1555555864760},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1555555864760},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1555555864774}],"Category":[],"Data":[],"Page":[],"Post":[{"_content":"","source":"_posts/linux-grep.md","raw":"","slug":"linux-grep","published":1,"date":"2018-10-06T08:34:46.000Z","updated":"2018-10-06T08:34:46.000Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cjum1sptq0000908odf194rgf","content":"","site":{"data":{}},"excerpt":"","more":""},{"_content":"> &emsp;&emsp;sed是stream editor(流编辑器)的缩写，是linux中文本处理非常重要的工具。它一次处理一行内容，处理时，把当前处理的行存储在临时缓冲区中，称为“模式空间”(pattern space)，接着用sed命令处理模式空间中的内容，处理完成后，把缓冲区的内容输出，接着处理下一行，这样不断重复，直到文件末尾。文件内容并没有改变，因为这些都在模式空间处理的。sed可以用来自动编辑一个或多个文件。\n\n#### 命令格式\n>sed [options] [command] file(s)\n\n##### [option] 选项\n> -n: 仅显示处理后的结果；\n-i: 直接修改读取的文件内容，而不是输出到终端；\n-e &lt;script&gt;: 以选项中的指定的script来处理输入的文本文件；\n-f &lt;script file&gt;: 以选项中指定的script文件来处理输入的文本文件；\n\n##### [command] 命令\n> a: 新增，在当前行下面插入文本；\nc: 取代， 把选定的行改为新的文本；\nd: 删除，删除选择的行；\ni: 插入， 在当前行上面插入文本；\np: 打印，打印选择行数据，通常与sed -n一起使用；\ns: 替换，替换指定字符串，通常与正则表达式一起使用；\n\n#### 用法实例\n##### 替换操作\n将file文件中每一行第一个的oldStr替换成newStr\n> sed 's/oldStr/newStr/' file   \n\n使用后缀g标记会替换每一行中的所有匹配 \n> sed 's/oldStr/newStr/g' file \n\n-n选项和p命令一起使用表示只打印那些发生替换的行    \n> sed -n 's/oldStr/newStr/p' \n\n当需要从第N处匹配开始替换时，可以使用 /Ng\n> echo testtesttesttest | sed 's/test/TEST/2'   \n> testTESTtesttest\n\n##### 定界符\n其中 / 在sed中作为定界符使用，也可以使用任意的定界符：\n> sed 's|oldStr|newStr|' file \n> sed 's:oldStr:newStr:' file   \n\n定界符出现在样式内部时，需要进行转义：\n> echo /bin | sed 's/\\/bin/\\/usr\\/local\\/bin/g'\n> /usr/local/bin\n\n##### 删除操作\n删除空白行：\n> sed '/^$/d' file\n\n删除文件的第2行：\n> sed '2d' file\n\n删除文件的第2行到第5行：\n> sed '2,5d' file\n\n删除文件中所有开头是test的行：\n> sed '/^test/'d file\n\n##### 多点编辑\n-e选项允许在同一行里执行多条命令。先删除1至5行，再用test替换TEST：\n> sed -e '1,5d' -e 's/test/TEST/' file\n    \n##### 从文件读入\nfile里的内容被读进来，显示在与test匹配的行后面，如果匹配多行，则file的内容将显示在所有匹配行的下面：\n> sed '/test/r file' filename\n\n\n##### 写入文件\n在example中所有包含test的行都被写入file里\n> sed -n '/test/w file' example","source":"_posts/linux-sed.md","raw":"> &emsp;&emsp;sed是stream editor(流编辑器)的缩写，是linux中文本处理非常重要的工具。它一次处理一行内容，处理时，把当前处理的行存储在临时缓冲区中，称为“模式空间”(pattern space)，接着用sed命令处理模式空间中的内容，处理完成后，把缓冲区的内容输出，接着处理下一行，这样不断重复，直到文件末尾。文件内容并没有改变，因为这些都在模式空间处理的。sed可以用来自动编辑一个或多个文件。\n\n#### 命令格式\n>sed [options] [command] file(s)\n\n##### [option] 选项\n> -n: 仅显示处理后的结果；\n-i: 直接修改读取的文件内容，而不是输出到终端；\n-e &lt;script&gt;: 以选项中的指定的script来处理输入的文本文件；\n-f &lt;script file&gt;: 以选项中指定的script文件来处理输入的文本文件；\n\n##### [command] 命令\n> a: 新增，在当前行下面插入文本；\nc: 取代， 把选定的行改为新的文本；\nd: 删除，删除选择的行；\ni: 插入， 在当前行上面插入文本；\np: 打印，打印选择行数据，通常与sed -n一起使用；\ns: 替换，替换指定字符串，通常与正则表达式一起使用；\n\n#### 用法实例\n##### 替换操作\n将file文件中每一行第一个的oldStr替换成newStr\n> sed 's/oldStr/newStr/' file   \n\n使用后缀g标记会替换每一行中的所有匹配 \n> sed 's/oldStr/newStr/g' file \n\n-n选项和p命令一起使用表示只打印那些发生替换的行    \n> sed -n 's/oldStr/newStr/p' \n\n当需要从第N处匹配开始替换时，可以使用 /Ng\n> echo testtesttesttest | sed 's/test/TEST/2'   \n> testTESTtesttest\n\n##### 定界符\n其中 / 在sed中作为定界符使用，也可以使用任意的定界符：\n> sed 's|oldStr|newStr|' file \n> sed 's:oldStr:newStr:' file   \n\n定界符出现在样式内部时，需要进行转义：\n> echo /bin | sed 's/\\/bin/\\/usr\\/local\\/bin/g'\n> /usr/local/bin\n\n##### 删除操作\n删除空白行：\n> sed '/^$/d' file\n\n删除文件的第2行：\n> sed '2d' file\n\n删除文件的第2行到第5行：\n> sed '2,5d' file\n\n删除文件中所有开头是test的行：\n> sed '/^test/'d file\n\n##### 多点编辑\n-e选项允许在同一行里执行多条命令。先删除1至5行，再用test替换TEST：\n> sed -e '1,5d' -e 's/test/TEST/' file\n    \n##### 从文件读入\nfile里的内容被读进来，显示在与test匹配的行后面，如果匹配多行，则file的内容将显示在所有匹配行的下面：\n> sed '/test/r file' filename\n\n\n##### 写入文件\n在example中所有包含test的行都被写入file里\n> sed -n '/test/w file' example","slug":"linux-sed","published":1,"date":"2018-10-04T09:33:50.000Z","updated":"2018-10-04T09:33:50.000Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cjum1spyf0001908okekpeh4f","content":"<blockquote>\n<p>&emsp;&emsp;sed是stream editor(流编辑器)的缩写，是linux中文本处理非常重要的工具。它一次处理一行内容，处理时，把当前处理的行存储在临时缓冲区中，称为“模式空间”(pattern space)，接着用sed命令处理模式空间中的内容，处理完成后，把缓冲区的内容输出，接着处理下一行，这样不断重复，直到文件末尾。文件内容并没有改变，因为这些都在模式空间处理的。sed可以用来自动编辑一个或多个文件。</p>\n</blockquote>\n<h4 id=\"命令格式\"><a href=\"#命令格式\" class=\"headerlink\" title=\"命令格式\"></a>命令格式</h4><blockquote>\n<p>sed [options] [command] file(s)</p>\n</blockquote>\n<h5 id=\"option-选项\"><a href=\"#option-选项\" class=\"headerlink\" title=\"[option] 选项\"></a>[option] 选项</h5><blockquote>\n<p>-n: 仅显示处理后的结果；<br>-i: 直接修改读取的文件内容，而不是输出到终端；<br>-e &lt;script&gt;: 以选项中的指定的script来处理输入的文本文件；<br>-f &lt;script file&gt;: 以选项中指定的script文件来处理输入的文本文件；</p>\n</blockquote>\n<h5 id=\"command-命令\"><a href=\"#command-命令\" class=\"headerlink\" title=\"[command] 命令\"></a>[command] 命令</h5><blockquote>\n<p>a: 新增，在当前行下面插入文本；<br>c: 取代， 把选定的行改为新的文本；<br>d: 删除，删除选择的行；<br>i: 插入， 在当前行上面插入文本；<br>p: 打印，打印选择行数据，通常与sed -n一起使用；<br>s: 替换，替换指定字符串，通常与正则表达式一起使用；</p>\n</blockquote>\n<h4 id=\"用法实例\"><a href=\"#用法实例\" class=\"headerlink\" title=\"用法实例\"></a>用法实例</h4><h5 id=\"替换操作\"><a href=\"#替换操作\" class=\"headerlink\" title=\"替换操作\"></a>替换操作</h5><p>将file文件中每一行第一个的oldStr替换成newStr</p>\n<blockquote>\n<p>sed ‘s/oldStr/newStr/‘ file   </p>\n</blockquote>\n<p>使用后缀g标记会替换每一行中的所有匹配 </p>\n<blockquote>\n<p>sed ‘s/oldStr/newStr/g’ file </p>\n</blockquote>\n<p>-n选项和p命令一起使用表示只打印那些发生替换的行    </p>\n<blockquote>\n<p>sed -n ‘s/oldStr/newStr/p’ </p>\n</blockquote>\n<p>当需要从第N处匹配开始替换时，可以使用 /Ng</p>\n<blockquote>\n<p>echo testtesttesttest | sed ‘s/test/TEST/2’<br>testTESTtesttest</p>\n</blockquote>\n<h5 id=\"定界符\"><a href=\"#定界符\" class=\"headerlink\" title=\"定界符\"></a>定界符</h5><p>其中 / 在sed中作为定界符使用，也可以使用任意的定界符：</p>\n<blockquote>\n<p>sed ‘s|oldStr|newStr|’ file<br>sed ‘s:oldStr:newStr:’ file   </p>\n</blockquote>\n<p>定界符出现在样式内部时，需要进行转义：</p>\n<blockquote>\n<p>echo /bin | sed ‘s/\\/bin/\\/usr\\/local\\/bin/g’<br>/usr/local/bin</p>\n</blockquote>\n<h5 id=\"删除操作\"><a href=\"#删除操作\" class=\"headerlink\" title=\"删除操作\"></a>删除操作</h5><p>删除空白行：</p>\n<blockquote>\n<p>sed ‘/^$/d’ file</p>\n</blockquote>\n<p>删除文件的第2行：</p>\n<blockquote>\n<p>sed ‘2d’ file</p>\n</blockquote>\n<p>删除文件的第2行到第5行：</p>\n<blockquote>\n<p>sed ‘2,5d’ file</p>\n</blockquote>\n<p>删除文件中所有开头是test的行：</p>\n<blockquote>\n<p>sed ‘/^test/‘d file</p>\n</blockquote>\n<h5 id=\"多点编辑\"><a href=\"#多点编辑\" class=\"headerlink\" title=\"多点编辑\"></a>多点编辑</h5><p>-e选项允许在同一行里执行多条命令。先删除1至5行，再用test替换TEST：</p>\n<blockquote>\n<p>sed -e ‘1,5d’ -e ‘s/test/TEST/‘ file</p>\n</blockquote>\n<h5 id=\"从文件读入\"><a href=\"#从文件读入\" class=\"headerlink\" title=\"从文件读入\"></a>从文件读入</h5><p>file里的内容被读进来，显示在与test匹配的行后面，如果匹配多行，则file的内容将显示在所有匹配行的下面：</p>\n<blockquote>\n<p>sed ‘/test/r file’ filename</p>\n</blockquote>\n<h5 id=\"写入文件\"><a href=\"#写入文件\" class=\"headerlink\" title=\"写入文件\"></a>写入文件</h5><p>在example中所有包含test的行都被写入file里</p>\n<blockquote>\n<p>sed -n ‘/test/w file’ example</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>&emsp;&emsp;sed是stream editor(流编辑器)的缩写，是linux中文本处理非常重要的工具。它一次处理一行内容，处理时，把当前处理的行存储在临时缓冲区中，称为“模式空间”(pattern space)，接着用sed命令处理模式空间中的内容，处理完成后，把缓冲区的内容输出，接着处理下一行，这样不断重复，直到文件末尾。文件内容并没有改变，因为这些都在模式空间处理的。sed可以用来自动编辑一个或多个文件。</p>\n</blockquote>\n<h4 id=\"命令格式\"><a href=\"#命令格式\" class=\"headerlink\" title=\"命令格式\"></a>命令格式</h4><blockquote>\n<p>sed [options] [command] file(s)</p>\n</blockquote>\n<h5 id=\"option-选项\"><a href=\"#option-选项\" class=\"headerlink\" title=\"[option] 选项\"></a>[option] 选项</h5><blockquote>\n<p>-n: 仅显示处理后的结果；<br>-i: 直接修改读取的文件内容，而不是输出到终端；<br>-e &lt;script&gt;: 以选项中的指定的script来处理输入的文本文件；<br>-f &lt;script file&gt;: 以选项中指定的script文件来处理输入的文本文件；</p>\n</blockquote>\n<h5 id=\"command-命令\"><a href=\"#command-命令\" class=\"headerlink\" title=\"[command] 命令\"></a>[command] 命令</h5><blockquote>\n<p>a: 新增，在当前行下面插入文本；<br>c: 取代， 把选定的行改为新的文本；<br>d: 删除，删除选择的行；<br>i: 插入， 在当前行上面插入文本；<br>p: 打印，打印选择行数据，通常与sed -n一起使用；<br>s: 替换，替换指定字符串，通常与正则表达式一起使用；</p>\n</blockquote>\n<h4 id=\"用法实例\"><a href=\"#用法实例\" class=\"headerlink\" title=\"用法实例\"></a>用法实例</h4><h5 id=\"替换操作\"><a href=\"#替换操作\" class=\"headerlink\" title=\"替换操作\"></a>替换操作</h5><p>将file文件中每一行第一个的oldStr替换成newStr</p>\n<blockquote>\n<p>sed ‘s/oldStr/newStr/‘ file   </p>\n</blockquote>\n<p>使用后缀g标记会替换每一行中的所有匹配 </p>\n<blockquote>\n<p>sed ‘s/oldStr/newStr/g’ file </p>\n</blockquote>\n<p>-n选项和p命令一起使用表示只打印那些发生替换的行    </p>\n<blockquote>\n<p>sed -n ‘s/oldStr/newStr/p’ </p>\n</blockquote>\n<p>当需要从第N处匹配开始替换时，可以使用 /Ng</p>\n<blockquote>\n<p>echo testtesttesttest | sed ‘s/test/TEST/2’<br>testTESTtesttest</p>\n</blockquote>\n<h5 id=\"定界符\"><a href=\"#定界符\" class=\"headerlink\" title=\"定界符\"></a>定界符</h5><p>其中 / 在sed中作为定界符使用，也可以使用任意的定界符：</p>\n<blockquote>\n<p>sed ‘s|oldStr|newStr|’ file<br>sed ‘s:oldStr:newStr:’ file   </p>\n</blockquote>\n<p>定界符出现在样式内部时，需要进行转义：</p>\n<blockquote>\n<p>echo /bin | sed ‘s/\\/bin/\\/usr\\/local\\/bin/g’<br>/usr/local/bin</p>\n</blockquote>\n<h5 id=\"删除操作\"><a href=\"#删除操作\" class=\"headerlink\" title=\"删除操作\"></a>删除操作</h5><p>删除空白行：</p>\n<blockquote>\n<p>sed ‘/^$/d’ file</p>\n</blockquote>\n<p>删除文件的第2行：</p>\n<blockquote>\n<p>sed ‘2d’ file</p>\n</blockquote>\n<p>删除文件的第2行到第5行：</p>\n<blockquote>\n<p>sed ‘2,5d’ file</p>\n</blockquote>\n<p>删除文件中所有开头是test的行：</p>\n<blockquote>\n<p>sed ‘/^test/‘d file</p>\n</blockquote>\n<h5 id=\"多点编辑\"><a href=\"#多点编辑\" class=\"headerlink\" title=\"多点编辑\"></a>多点编辑</h5><p>-e选项允许在同一行里执行多条命令。先删除1至5行，再用test替换TEST：</p>\n<blockquote>\n<p>sed -e ‘1,5d’ -e ‘s/test/TEST/‘ file</p>\n</blockquote>\n<h5 id=\"从文件读入\"><a href=\"#从文件读入\" class=\"headerlink\" title=\"从文件读入\"></a>从文件读入</h5><p>file里的内容被读进来，显示在与test匹配的行后面，如果匹配多行，则file的内容将显示在所有匹配行的下面：</p>\n<blockquote>\n<p>sed ‘/test/r file’ filename</p>\n</blockquote>\n<h5 id=\"写入文件\"><a href=\"#写入文件\" class=\"headerlink\" title=\"写入文件\"></a>写入文件</h5><p>在example中所有包含test的行都被写入file里</p>\n<blockquote>\n<p>sed -n ‘/test/w file’ example</p>\n</blockquote>\n"},{"_content":"> &emsp;&emsp;Python函数定义时参数灵活，使用不同参数的组合不仅可以简化调用者的代码，还可以处理复杂的参数。\n函数的参数除了有必选参数外，还可以使用默认参数，可变参数，关键字参数和命名关键字参数。\n\n#### 位置参数\n定义一个计算x^2的函数，以及一个计算x^n的函数\n```python\ndef calc1(x):\n    return x * x\n\ndef calc2(x, n):\n    s = 1\n    for i in range(n):\n        s *= x\n    return s\n```\n对于这两个函数，其参数都是位置参数，同时也是必选参数，调用函数时实参需和形参一一对应，当参数不对应时会引起错误，例如：\n> &gt;&gt;&gt;calc2(2)    \n> Traceback (most recent call last):   \n> File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;     \n> TypeError: calc2() takes exactly 2 arguments (1 given)    \n>     \n> &gt;&gt;&gt;calc2(2, 2, 2)    \n> Traceback (most recent call last):   \n> File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;      \n> TypeError: calc2() takes exactly 2 arguments (3 given)     \n\n#### 默认参数\n对于函数calc2，如若函数调用过程中，计算x^2使用的较多，每次调用都要通过calc2(x, 2)来调用，这样就略显繁琐，此时可以通过默认参数来简化函数的调用，改写函数为：\n```python\ndef calc3(x, n = 2):\n    s = 1\n    for i in range(n):\n        s *= x\n    return s\n```\n这样，我们在调用calc3(2)时，就相当于调用calc3(2, 2)，而对于其他次方仍需明确指出n。\n默认参数在使用中应当的注意：位置(必选)参数在前，默认参数在后。\n    \n当有多个默认参数时，既可以按顺序提供默认参数，也可以不按顺序提供默认参数。\n```python\ndef saveInfo(name, gender, age = 23, city = 'HangZhou'):\n    print(name, gender, age, city)\n\nsaveInfo('Alen', 'M', city='Beijing')\n```\n    \n定义默认参数时需要特别注意的一点：**默认参数必须指向不变对象！**\n看如下例子：\n```python\ndef addEnd(L=[]):\n    L.append('END')\n    return L\n```\n> &gt;&gt;&gt;addEnd()   \n> ['END']    \n> &gt;&gt;&gt;addEnd()  \n> ['END', 'END']    \n> &gt;&gt;&gt;addEnd()    \n> ['END', 'END', 'END']     \n\n出现这样的结果是因为：默认参数L仅仅代表[]的一个引用，函数定义时[]就已确定，每次调用addEnd时，使用的都是函数定义时的[]，通过print(id(L))可以看出，每次调用该函数时使用的是同一内存地址的[]。\n```python\ndef addEnd(L=[]):\n    L.append('END')\n    print(id(L))\n    return L\n\naddEnd()\n#4518465224\n#['END']\naddEnd()\n#4518465224\n#['END', 'END']\n```\n为了避免这个问题，可以通过下面的方式，每次调用函数时，都会新建一个[]：\n```python\ndef addEnd(L=None):\n    L = [] if L == None else L\n    L.append('END')\n    print(id(L))\n    return L\n\naddEnd()\n#4518687688\n#['END']\naddEnd()\n#4518688328\n#['END']\n```\n#### 可变参数\n可变参数即传入的参数个数是可变的，可以是0个，1个，或多个   \n先定义一下函数，给定一组数字a，b，c...，计算这组数字的平方和a^2 + b^2 + c^2 + ...\n```python\ndef calc(numbers):\n    s = 0\n    for num in numbers:\n        s = s + num * num\n    return s\n```\n该函数在调用时，需先组装一个list或tuple    \n> &gt;&gt;&gt;calc([1, 2, 3])     \n> 14\n> &gt;&gt;&gt;calc([1, 2, 3])     \n> 30\n\n如果利用可变参数，函数的调用可以简化\n```python\ndef calc(*numbers):\n    s = 0\n    for num in numbers:\n        s = s + num * num\n    return s\n\ncalc()\n# 0\ncalc(1, 2, 3)     \n# 14\ncalc(1, 2, 3, 4)\n# 30\n```\n可变参数与list或tuple参数相比，仅仅在参数前面加了个*号，**\\*的作用是将传入的参数组装成一个tuple**\n，如果已经有一个list或tuple，要调用可变参数怎么办呢？\n> &gt;&gt;&gt;nums = [1, 2, 3]     \n> &gt;&gt;&gt;calc(nums[0], nums[1], nums[2])     \n> 14  \n\n这种写法就过于繁琐，针对这种情况，python允许在list或tuple前加一个*号，将list或tuple的元素变成可变参数传入\n> &gt;&gt;&gt;nums = [1, 2, 3]     \n> &gt;&gt;&gt;calc(*nums)       \n> 14    \n\n#### 关键字参数\n关键字参数允许你传入0个或任意个含参数名的参数，这些关键字参数在函数内部自动组装为一个dict    \n定义一个用户注册的函数\n```Python\ndef user(name, age, **kw):\n    print('name:', name, 'age:', age, 'other:', kw)\n\nuser('Bob', 23)          \n# ('name:', 'Bob', 'age:', 23, 'other:', {})\nuser('Alen', 20, gender='M', job='Engineer') \n# ('name:', 'Alen', 'age:', 20, 'other:', {'gender': 'M', 'job': 'Engineer'})\n```\n函数user除了接收必选参数name，age外还接收关键字参数kw，调用该函数时，可以只传入必选参数，也可以传入任意个数的关键字参数，**\\*\\*的作用是将含参数名的参数，组装成一个dict传入kw**。关键字参数可以扩展函数的功能，调用者如果提供更多的信息，我们仍可以接收到。例如当用户注册时，姓名和年龄时必填项，其他是可选项，就可以通过关键字参数来实现。        \n和可变参数类似，当有现成dict时，可通过以下方式简化调用：\n> &gt;&gt;&gt;extra = {'city': 'Beijing', 'job': 'Engineer'}    \n> user('Bob', 23, **extra)    \n> name: Bob age: 23 other: {'city': 'Beijing', 'job': 'Engineer'}     \n\n\\*\\*extra表示把extra这个dict的所有key-value用关键字参数传入到函数的\\*\\*kw参数，kw将获得一个dict。**注意kw获得的dict是extra的一份拷贝，对kw的改动不会影响到函数外的extra。**\n#### 命名关键字参数\n对于关键字参数，函数的调用者可以传入任意不受限制的关键字参数，如果要限制关键字参数的名字，就可以用命名关键字参数。命名关键字参数需要一个特殊分隔符\\*，\\*后面的参数被视为命名关键字参数，例如，只接收city和job作为关键字参数：\n```Python\ndef user(name, age, *, city, job):\n    print('name:', name, 'age:', age, 'city:', city, 'job:', job)\n\nuser('Alen', 20, city='Beijing', job='Engineer') \n# name: Alen age: 20 city: Beijing job: Engineer\n```\n不同于位置参数，命名关键字参数必须传入参数名。如果没有传入参数名，调用将报错：\n> &gt;&gt;&gt;user('Alen', 20, 'Beijing', 'Engineer')    \n> Traceback (most recent call last):    \n>   File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;    \n> TypeError: user() takes 2 positional arguments but 4 were given\n\n若函数定义中已经有了一个可变参数，后面跟着的命名关键字参数就不再需要一个特殊分隔符*了：\n```Python\ndef user(name, age, *args, city, job):\n    print(name, age, args, city, job)\n```\n命名关键字参数可以有缺省值，从而简化调用：\n```Python\ndef user(name, age, *, city='Beijing', job):\n    print(name, age, city, job)\n\nuser('Bob', 22, job='Engineer')\n# Bob 22 Beijing Engineer\n```\n#### 参数组合\n定义函数，可以用必选参数、默认参数、可变参数、关键字参数和命名关键字参数，这5种参数都可以组合使用。但是应注意，参数定义的顺序必须是：必选参数、默认参数、可变参数、命名关键字参数和关键字参数。\n定义一个函数，包含上述参数：\n```Python\ndef user(name, age = 20, *args, city = 'Beijing', job, **kw):\n    print(name, age, args, city, job, kw)\n\nuser('Bob', 20, 120, job = 'Engineer', gender = 'M')\n# Bob 20 (120,) Beijing Engineer {'gender': 'M'}\n```\n对于任意函数，都可以通过类似func(*args, **kw)的形式调用它，无论它的参数是如何定义的。\n> &gt;&gt;&gt;args = ('Bob', 20, 120)     \n> &gt;&gt;&gt;kw = {'job':'Engineer', 'gender':'M'}     \n> &gt;&gt;&gt;user(*args, **kw)     \n> Bob 20 (120,) Beijing Engineer {'gender': 'M'}","source":"_posts/python-函数参数.md","raw":"> &emsp;&emsp;Python函数定义时参数灵活，使用不同参数的组合不仅可以简化调用者的代码，还可以处理复杂的参数。\n函数的参数除了有必选参数外，还可以使用默认参数，可变参数，关键字参数和命名关键字参数。\n\n#### 位置参数\n定义一个计算x^2的函数，以及一个计算x^n的函数\n```python\ndef calc1(x):\n    return x * x\n\ndef calc2(x, n):\n    s = 1\n    for i in range(n):\n        s *= x\n    return s\n```\n对于这两个函数，其参数都是位置参数，同时也是必选参数，调用函数时实参需和形参一一对应，当参数不对应时会引起错误，例如：\n> &gt;&gt;&gt;calc2(2)    \n> Traceback (most recent call last):   \n> File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;     \n> TypeError: calc2() takes exactly 2 arguments (1 given)    \n>     \n> &gt;&gt;&gt;calc2(2, 2, 2)    \n> Traceback (most recent call last):   \n> File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;      \n> TypeError: calc2() takes exactly 2 arguments (3 given)     \n\n#### 默认参数\n对于函数calc2，如若函数调用过程中，计算x^2使用的较多，每次调用都要通过calc2(x, 2)来调用，这样就略显繁琐，此时可以通过默认参数来简化函数的调用，改写函数为：\n```python\ndef calc3(x, n = 2):\n    s = 1\n    for i in range(n):\n        s *= x\n    return s\n```\n这样，我们在调用calc3(2)时，就相当于调用calc3(2, 2)，而对于其他次方仍需明确指出n。\n默认参数在使用中应当的注意：位置(必选)参数在前，默认参数在后。\n    \n当有多个默认参数时，既可以按顺序提供默认参数，也可以不按顺序提供默认参数。\n```python\ndef saveInfo(name, gender, age = 23, city = 'HangZhou'):\n    print(name, gender, age, city)\n\nsaveInfo('Alen', 'M', city='Beijing')\n```\n    \n定义默认参数时需要特别注意的一点：**默认参数必须指向不变对象！**\n看如下例子：\n```python\ndef addEnd(L=[]):\n    L.append('END')\n    return L\n```\n> &gt;&gt;&gt;addEnd()   \n> ['END']    \n> &gt;&gt;&gt;addEnd()  \n> ['END', 'END']    \n> &gt;&gt;&gt;addEnd()    \n> ['END', 'END', 'END']     \n\n出现这样的结果是因为：默认参数L仅仅代表[]的一个引用，函数定义时[]就已确定，每次调用addEnd时，使用的都是函数定义时的[]，通过print(id(L))可以看出，每次调用该函数时使用的是同一内存地址的[]。\n```python\ndef addEnd(L=[]):\n    L.append('END')\n    print(id(L))\n    return L\n\naddEnd()\n#4518465224\n#['END']\naddEnd()\n#4518465224\n#['END', 'END']\n```\n为了避免这个问题，可以通过下面的方式，每次调用函数时，都会新建一个[]：\n```python\ndef addEnd(L=None):\n    L = [] if L == None else L\n    L.append('END')\n    print(id(L))\n    return L\n\naddEnd()\n#4518687688\n#['END']\naddEnd()\n#4518688328\n#['END']\n```\n#### 可变参数\n可变参数即传入的参数个数是可变的，可以是0个，1个，或多个   \n先定义一下函数，给定一组数字a，b，c...，计算这组数字的平方和a^2 + b^2 + c^2 + ...\n```python\ndef calc(numbers):\n    s = 0\n    for num in numbers:\n        s = s + num * num\n    return s\n```\n该函数在调用时，需先组装一个list或tuple    \n> &gt;&gt;&gt;calc([1, 2, 3])     \n> 14\n> &gt;&gt;&gt;calc([1, 2, 3])     \n> 30\n\n如果利用可变参数，函数的调用可以简化\n```python\ndef calc(*numbers):\n    s = 0\n    for num in numbers:\n        s = s + num * num\n    return s\n\ncalc()\n# 0\ncalc(1, 2, 3)     \n# 14\ncalc(1, 2, 3, 4)\n# 30\n```\n可变参数与list或tuple参数相比，仅仅在参数前面加了个*号，**\\*的作用是将传入的参数组装成一个tuple**\n，如果已经有一个list或tuple，要调用可变参数怎么办呢？\n> &gt;&gt;&gt;nums = [1, 2, 3]     \n> &gt;&gt;&gt;calc(nums[0], nums[1], nums[2])     \n> 14  \n\n这种写法就过于繁琐，针对这种情况，python允许在list或tuple前加一个*号，将list或tuple的元素变成可变参数传入\n> &gt;&gt;&gt;nums = [1, 2, 3]     \n> &gt;&gt;&gt;calc(*nums)       \n> 14    \n\n#### 关键字参数\n关键字参数允许你传入0个或任意个含参数名的参数，这些关键字参数在函数内部自动组装为一个dict    \n定义一个用户注册的函数\n```Python\ndef user(name, age, **kw):\n    print('name:', name, 'age:', age, 'other:', kw)\n\nuser('Bob', 23)          \n# ('name:', 'Bob', 'age:', 23, 'other:', {})\nuser('Alen', 20, gender='M', job='Engineer') \n# ('name:', 'Alen', 'age:', 20, 'other:', {'gender': 'M', 'job': 'Engineer'})\n```\n函数user除了接收必选参数name，age外还接收关键字参数kw，调用该函数时，可以只传入必选参数，也可以传入任意个数的关键字参数，**\\*\\*的作用是将含参数名的参数，组装成一个dict传入kw**。关键字参数可以扩展函数的功能，调用者如果提供更多的信息，我们仍可以接收到。例如当用户注册时，姓名和年龄时必填项，其他是可选项，就可以通过关键字参数来实现。        \n和可变参数类似，当有现成dict时，可通过以下方式简化调用：\n> &gt;&gt;&gt;extra = {'city': 'Beijing', 'job': 'Engineer'}    \n> user('Bob', 23, **extra)    \n> name: Bob age: 23 other: {'city': 'Beijing', 'job': 'Engineer'}     \n\n\\*\\*extra表示把extra这个dict的所有key-value用关键字参数传入到函数的\\*\\*kw参数，kw将获得一个dict。**注意kw获得的dict是extra的一份拷贝，对kw的改动不会影响到函数外的extra。**\n#### 命名关键字参数\n对于关键字参数，函数的调用者可以传入任意不受限制的关键字参数，如果要限制关键字参数的名字，就可以用命名关键字参数。命名关键字参数需要一个特殊分隔符\\*，\\*后面的参数被视为命名关键字参数，例如，只接收city和job作为关键字参数：\n```Python\ndef user(name, age, *, city, job):\n    print('name:', name, 'age:', age, 'city:', city, 'job:', job)\n\nuser('Alen', 20, city='Beijing', job='Engineer') \n# name: Alen age: 20 city: Beijing job: Engineer\n```\n不同于位置参数，命名关键字参数必须传入参数名。如果没有传入参数名，调用将报错：\n> &gt;&gt;&gt;user('Alen', 20, 'Beijing', 'Engineer')    \n> Traceback (most recent call last):    \n>   File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;    \n> TypeError: user() takes 2 positional arguments but 4 were given\n\n若函数定义中已经有了一个可变参数，后面跟着的命名关键字参数就不再需要一个特殊分隔符*了：\n```Python\ndef user(name, age, *args, city, job):\n    print(name, age, args, city, job)\n```\n命名关键字参数可以有缺省值，从而简化调用：\n```Python\ndef user(name, age, *, city='Beijing', job):\n    print(name, age, city, job)\n\nuser('Bob', 22, job='Engineer')\n# Bob 22 Beijing Engineer\n```\n#### 参数组合\n定义函数，可以用必选参数、默认参数、可变参数、关键字参数和命名关键字参数，这5种参数都可以组合使用。但是应注意，参数定义的顺序必须是：必选参数、默认参数、可变参数、命名关键字参数和关键字参数。\n定义一个函数，包含上述参数：\n```Python\ndef user(name, age = 20, *args, city = 'Beijing', job, **kw):\n    print(name, age, args, city, job, kw)\n\nuser('Bob', 20, 120, job = 'Engineer', gender = 'M')\n# Bob 20 (120,) Beijing Engineer {'gender': 'M'}\n```\n对于任意函数，都可以通过类似func(*args, **kw)的形式调用它，无论它的参数是如何定义的。\n> &gt;&gt;&gt;args = ('Bob', 20, 120)     \n> &gt;&gt;&gt;kw = {'job':'Engineer', 'gender':'M'}     \n> &gt;&gt;&gt;user(*args, **kw)     \n> Bob 20 (120,) Beijing Engineer {'gender': 'M'}","slug":"python-函数参数","published":1,"date":"2018-10-05T08:42:49.000Z","updated":"2018-10-05T08:42:49.000Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cjum1spyg0002908oi7js32o0","content":"<blockquote>\n<p>&emsp;&emsp;Python函数定义时参数灵活，使用不同参数的组合不仅可以简化调用者的代码，还可以处理复杂的参数。<br>函数的参数除了有必选参数外，还可以使用默认参数，可变参数，关键字参数和命名关键字参数。</p>\n</blockquote>\n<h4 id=\"位置参数\"><a href=\"#位置参数\" class=\"headerlink\" title=\"位置参数\"></a>位置参数</h4><p>定义一个计算x^2的函数，以及一个计算x^n的函数<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">calc1</span><span class=\"params\">(x)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> x * x</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">calc2</span><span class=\"params\">(x, n)</span>:</span></span><br><span class=\"line\">    s = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(n):</span><br><span class=\"line\">        s *= x</span><br><span class=\"line\">    <span class=\"keyword\">return</span> s</span><br></pre></td></tr></table></figure></p>\n<p>对于这两个函数，其参数都是位置参数，同时也是必选参数，调用函数时实参需和形参一一对应，当参数不对应时会引起错误，例如：</p>\n<blockquote>\n<p>&gt;&gt;&gt;calc2(2)<br>Traceback (most recent call last):<br>File “&lt;stdin&gt;”, line 1, in &lt;module&gt;<br>TypeError: calc2() takes exactly 2 arguments (1 given)    </p>\n<p>&gt;&gt;&gt;calc2(2, 2, 2)<br>Traceback (most recent call last):<br>File “&lt;stdin&gt;”, line 1, in &lt;module&gt;<br>TypeError: calc2() takes exactly 2 arguments (3 given)     </p>\n</blockquote>\n<h4 id=\"默认参数\"><a href=\"#默认参数\" class=\"headerlink\" title=\"默认参数\"></a>默认参数</h4><p>对于函数calc2，如若函数调用过程中，计算x^2使用的较多，每次调用都要通过calc2(x, 2)来调用，这样就略显繁琐，此时可以通过默认参数来简化函数的调用，改写函数为：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">calc3</span><span class=\"params\">(x, n = <span class=\"number\">2</span>)</span>:</span></span><br><span class=\"line\">    s = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(n):</span><br><span class=\"line\">        s *= x</span><br><span class=\"line\">    <span class=\"keyword\">return</span> s</span><br></pre></td></tr></table></figure></p>\n<p>这样，我们在调用calc3(2)时，就相当于调用calc3(2, 2)，而对于其他次方仍需明确指出n。<br>默认参数在使用中应当的注意：位置(必选)参数在前，默认参数在后。</p>\n<p>当有多个默认参数时，既可以按顺序提供默认参数，也可以不按顺序提供默认参数。<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">saveInfo</span><span class=\"params\">(name, gender, age = <span class=\"number\">23</span>, city = <span class=\"string\">'HangZhou'</span>)</span>:</span></span><br><span class=\"line\">    print(name, gender, age, city)</span><br><span class=\"line\"></span><br><span class=\"line\">saveInfo(<span class=\"string\">'Alen'</span>, <span class=\"string\">'M'</span>, city=<span class=\"string\">'Beijing'</span>)</span><br></pre></td></tr></table></figure></p>\n<p>定义默认参数时需要特别注意的一点：<strong>默认参数必须指向不变对象！</strong><br>看如下例子：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">addEnd</span><span class=\"params\">(L=[])</span>:</span></span><br><span class=\"line\">    L.append(<span class=\"string\">'END'</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> L</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>&gt;&gt;&gt;addEnd()<br>[‘END’]<br>&gt;&gt;&gt;addEnd()<br>[‘END’, ‘END’]<br>&gt;&gt;&gt;addEnd()<br>[‘END’, ‘END’, ‘END’]     </p>\n</blockquote>\n<p>出现这样的结果是因为：默认参数L仅仅代表[]的一个引用，函数定义时[]就已确定，每次调用addEnd时，使用的都是函数定义时的[]，通过print(id(L))可以看出，每次调用该函数时使用的是同一内存地址的[]。<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">addEnd</span><span class=\"params\">(L=[])</span>:</span></span><br><span class=\"line\">    L.append(<span class=\"string\">'END'</span>)</span><br><span class=\"line\">    print(id(L))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> L</span><br><span class=\"line\"></span><br><span class=\"line\">addEnd()</span><br><span class=\"line\"><span class=\"comment\">#4518465224</span></span><br><span class=\"line\"><span class=\"comment\">#['END']</span></span><br><span class=\"line\">addEnd()</span><br><span class=\"line\"><span class=\"comment\">#4518465224</span></span><br><span class=\"line\"><span class=\"comment\">#['END', 'END']</span></span><br></pre></td></tr></table></figure></p>\n<p>为了避免这个问题，可以通过下面的方式，每次调用函数时，都会新建一个[]：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">addEnd</span><span class=\"params\">(L=None)</span>:</span></span><br><span class=\"line\">    L = [] <span class=\"keyword\">if</span> L == <span class=\"literal\">None</span> <span class=\"keyword\">else</span> L</span><br><span class=\"line\">    L.append(<span class=\"string\">'END'</span>)</span><br><span class=\"line\">    print(id(L))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> L</span><br><span class=\"line\"></span><br><span class=\"line\">addEnd()</span><br><span class=\"line\"><span class=\"comment\">#4518687688</span></span><br><span class=\"line\"><span class=\"comment\">#['END']</span></span><br><span class=\"line\">addEnd()</span><br><span class=\"line\"><span class=\"comment\">#4518688328</span></span><br><span class=\"line\"><span class=\"comment\">#['END']</span></span><br></pre></td></tr></table></figure></p>\n<h4 id=\"可变参数\"><a href=\"#可变参数\" class=\"headerlink\" title=\"可变参数\"></a>可变参数</h4><p>可变参数即传入的参数个数是可变的，可以是0个，1个，或多个<br>先定义一下函数，给定一组数字a，b，c…，计算这组数字的平方和a^2 + b^2 + c^2 + …<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">calc</span><span class=\"params\">(numbers)</span>:</span></span><br><span class=\"line\">    s = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> num <span class=\"keyword\">in</span> numbers:</span><br><span class=\"line\">        s = s + num * num</span><br><span class=\"line\">    <span class=\"keyword\">return</span> s</span><br></pre></td></tr></table></figure></p>\n<p>该函数在调用时，需先组装一个list或tuple    </p>\n<blockquote>\n<p>&gt;&gt;&gt;calc([1, 2, 3])<br>14<br>&gt;&gt;&gt;calc([1, 2, 3])<br>30</p>\n</blockquote>\n<p>如果利用可变参数，函数的调用可以简化<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">calc</span><span class=\"params\">(*numbers)</span>:</span></span><br><span class=\"line\">    s = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> num <span class=\"keyword\">in</span> numbers:</span><br><span class=\"line\">        s = s + num * num</span><br><span class=\"line\">    <span class=\"keyword\">return</span> s</span><br><span class=\"line\"></span><br><span class=\"line\">calc()</span><br><span class=\"line\"><span class=\"comment\"># 0</span></span><br><span class=\"line\">calc(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>)     </span><br><span class=\"line\"><span class=\"comment\"># 14</span></span><br><span class=\"line\">calc(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>)</span><br><span class=\"line\"><span class=\"comment\"># 30</span></span><br></pre></td></tr></table></figure></p>\n<p>可变参数与list或tuple参数相比，仅仅在参数前面加了个<em>号，**\\</em>的作用是将传入的参数组装成一个tuple**<br>，如果已经有一个list或tuple，要调用可变参数怎么办呢？</p>\n<blockquote>\n<p>&gt;&gt;&gt;nums = [1, 2, 3]<br>&gt;&gt;&gt;calc(nums[0], nums[1], nums[2])<br>14  </p>\n</blockquote>\n<p>这种写法就过于繁琐，针对这种情况，python允许在list或tuple前加一个*号，将list或tuple的元素变成可变参数传入</p>\n<blockquote>\n<p>&gt;&gt;&gt;nums = [1, 2, 3]<br>&gt;&gt;&gt;calc(*nums)<br>14    </p>\n</blockquote>\n<h4 id=\"关键字参数\"><a href=\"#关键字参数\" class=\"headerlink\" title=\"关键字参数\"></a>关键字参数</h4><p>关键字参数允许你传入0个或任意个含参数名的参数，这些关键字参数在函数内部自动组装为一个dict<br>定义一个用户注册的函数<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">user</span><span class=\"params\">(name, age, **kw)</span>:</span></span><br><span class=\"line\">    print(<span class=\"string\">'name:'</span>, name, <span class=\"string\">'age:'</span>, age, <span class=\"string\">'other:'</span>, kw)</span><br><span class=\"line\"></span><br><span class=\"line\">user(<span class=\"string\">'Bob'</span>, <span class=\"number\">23</span>)          </span><br><span class=\"line\"><span class=\"comment\"># ('name:', 'Bob', 'age:', 23, 'other:', &#123;&#125;)</span></span><br><span class=\"line\">user(<span class=\"string\">'Alen'</span>, <span class=\"number\">20</span>, gender=<span class=\"string\">'M'</span>, job=<span class=\"string\">'Engineer'</span>) </span><br><span class=\"line\"><span class=\"comment\"># ('name:', 'Alen', 'age:', 20, 'other:', &#123;'gender': 'M', 'job': 'Engineer'&#125;)</span></span><br></pre></td></tr></table></figure></p>\n<p>函数user除了接收必选参数name，age外还接收关键字参数kw，调用该函数时，可以只传入必选参数，也可以传入任意个数的关键字参数，<strong>**的作用是将含参数名的参数，组装成一个dict传入kw</strong>。关键字参数可以扩展函数的功能，调用者如果提供更多的信息，我们仍可以接收到。例如当用户注册时，姓名和年龄时必填项，其他是可选项，就可以通过关键字参数来实现。<br>和可变参数类似，当有现成dict时，可通过以下方式简化调用：</p>\n<blockquote>\n<p>&gt;&gt;&gt;extra = {‘city’: ‘Beijing’, ‘job’: ‘Engineer’}<br>user(‘Bob’, 23, **extra)<br>name: Bob age: 23 other: {‘city’: ‘Beijing’, ‘job’: ‘Engineer’}     </p>\n</blockquote>\n<p>**extra表示把extra这个dict的所有key-value用关键字参数传入到函数的**kw参数，kw将获得一个dict。<strong>注意kw获得的dict是extra的一份拷贝，对kw的改动不会影响到函数外的extra。</strong></p>\n<h4 id=\"命名关键字参数\"><a href=\"#命名关键字参数\" class=\"headerlink\" title=\"命名关键字参数\"></a>命名关键字参数</h4><p>对于关键字参数，函数的调用者可以传入任意不受限制的关键字参数，如果要限制关键字参数的名字，就可以用命名关键字参数。命名关键字参数需要一个特殊分隔符*，*后面的参数被视为命名关键字参数，例如，只接收city和job作为关键字参数：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">user</span><span class=\"params\">(name, age, *, city, job)</span>:</span></span><br><span class=\"line\">    print(<span class=\"string\">'name:'</span>, name, <span class=\"string\">'age:'</span>, age, <span class=\"string\">'city:'</span>, city, <span class=\"string\">'job:'</span>, job)</span><br><span class=\"line\"></span><br><span class=\"line\">user(<span class=\"string\">'Alen'</span>, <span class=\"number\">20</span>, city=<span class=\"string\">'Beijing'</span>, job=<span class=\"string\">'Engineer'</span>) </span><br><span class=\"line\"><span class=\"comment\"># name: Alen age: 20 city: Beijing job: Engineer</span></span><br></pre></td></tr></table></figure></p>\n<p>不同于位置参数，命名关键字参数必须传入参数名。如果没有传入参数名，调用将报错：</p>\n<blockquote>\n<p>&gt;&gt;&gt;user(‘Alen’, 20, ‘Beijing’, ‘Engineer’)<br>Traceback (most recent call last):<br>  File “&lt;stdin&gt;”, line 1, in &lt;module&gt;<br>TypeError: user() takes 2 positional arguments but 4 were given</p>\n</blockquote>\n<p>若函数定义中已经有了一个可变参数，后面跟着的命名关键字参数就不再需要一个特殊分隔符*了：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">user</span><span class=\"params\">(name, age, *args, city, job)</span>:</span></span><br><span class=\"line\">    print(name, age, args, city, job)</span><br></pre></td></tr></table></figure></p>\n<p>命名关键字参数可以有缺省值，从而简化调用：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">user</span><span class=\"params\">(name, age, *, city=<span class=\"string\">'Beijing'</span>, job)</span>:</span></span><br><span class=\"line\">    print(name, age, city, job)</span><br><span class=\"line\"></span><br><span class=\"line\">user(<span class=\"string\">'Bob'</span>, <span class=\"number\">22</span>, job=<span class=\"string\">'Engineer'</span>)</span><br><span class=\"line\"><span class=\"comment\"># Bob 22 Beijing Engineer</span></span><br></pre></td></tr></table></figure></p>\n<h4 id=\"参数组合\"><a href=\"#参数组合\" class=\"headerlink\" title=\"参数组合\"></a>参数组合</h4><p>定义函数，可以用必选参数、默认参数、可变参数、关键字参数和命名关键字参数，这5种参数都可以组合使用。但是应注意，参数定义的顺序必须是：必选参数、默认参数、可变参数、命名关键字参数和关键字参数。<br>定义一个函数，包含上述参数：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">user</span><span class=\"params\">(name, age = <span class=\"number\">20</span>, *args, city = <span class=\"string\">'Beijing'</span>, job, **kw)</span>:</span></span><br><span class=\"line\">    print(name, age, args, city, job, kw)</span><br><span class=\"line\"></span><br><span class=\"line\">user(<span class=\"string\">'Bob'</span>, <span class=\"number\">20</span>, <span class=\"number\">120</span>, job = <span class=\"string\">'Engineer'</span>, gender = <span class=\"string\">'M'</span>)</span><br><span class=\"line\"><span class=\"comment\"># Bob 20 (120,) Beijing Engineer &#123;'gender': 'M'&#125;</span></span><br></pre></td></tr></table></figure></p>\n<p>对于任意函数，都可以通过类似func(*args, **kw)的形式调用它，无论它的参数是如何定义的。</p>\n<blockquote>\n<p>&gt;&gt;&gt;args = (‘Bob’, 20, 120)<br>&gt;&gt;&gt;kw = {‘job’:’Engineer’, ‘gender’:’M’}<br>&gt;&gt;&gt;user(*args, **kw)<br>Bob 20 (120,) Beijing Engineer {‘gender’: ‘M’}</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>&emsp;&emsp;Python函数定义时参数灵活，使用不同参数的组合不仅可以简化调用者的代码，还可以处理复杂的参数。<br>函数的参数除了有必选参数外，还可以使用默认参数，可变参数，关键字参数和命名关键字参数。</p>\n</blockquote>\n<h4 id=\"位置参数\"><a href=\"#位置参数\" class=\"headerlink\" title=\"位置参数\"></a>位置参数</h4><p>定义一个计算x^2的函数，以及一个计算x^n的函数<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">calc1</span><span class=\"params\">(x)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> x * x</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">calc2</span><span class=\"params\">(x, n)</span>:</span></span><br><span class=\"line\">    s = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(n):</span><br><span class=\"line\">        s *= x</span><br><span class=\"line\">    <span class=\"keyword\">return</span> s</span><br></pre></td></tr></table></figure></p>\n<p>对于这两个函数，其参数都是位置参数，同时也是必选参数，调用函数时实参需和形参一一对应，当参数不对应时会引起错误，例如：</p>\n<blockquote>\n<p>&gt;&gt;&gt;calc2(2)<br>Traceback (most recent call last):<br>File “&lt;stdin&gt;”, line 1, in &lt;module&gt;<br>TypeError: calc2() takes exactly 2 arguments (1 given)    </p>\n<p>&gt;&gt;&gt;calc2(2, 2, 2)<br>Traceback (most recent call last):<br>File “&lt;stdin&gt;”, line 1, in &lt;module&gt;<br>TypeError: calc2() takes exactly 2 arguments (3 given)     </p>\n</blockquote>\n<h4 id=\"默认参数\"><a href=\"#默认参数\" class=\"headerlink\" title=\"默认参数\"></a>默认参数</h4><p>对于函数calc2，如若函数调用过程中，计算x^2使用的较多，每次调用都要通过calc2(x, 2)来调用，这样就略显繁琐，此时可以通过默认参数来简化函数的调用，改写函数为：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">calc3</span><span class=\"params\">(x, n = <span class=\"number\">2</span>)</span>:</span></span><br><span class=\"line\">    s = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(n):</span><br><span class=\"line\">        s *= x</span><br><span class=\"line\">    <span class=\"keyword\">return</span> s</span><br></pre></td></tr></table></figure></p>\n<p>这样，我们在调用calc3(2)时，就相当于调用calc3(2, 2)，而对于其他次方仍需明确指出n。<br>默认参数在使用中应当的注意：位置(必选)参数在前，默认参数在后。</p>\n<p>当有多个默认参数时，既可以按顺序提供默认参数，也可以不按顺序提供默认参数。<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">saveInfo</span><span class=\"params\">(name, gender, age = <span class=\"number\">23</span>, city = <span class=\"string\">'HangZhou'</span>)</span>:</span></span><br><span class=\"line\">    print(name, gender, age, city)</span><br><span class=\"line\"></span><br><span class=\"line\">saveInfo(<span class=\"string\">'Alen'</span>, <span class=\"string\">'M'</span>, city=<span class=\"string\">'Beijing'</span>)</span><br></pre></td></tr></table></figure></p>\n<p>定义默认参数时需要特别注意的一点：<strong>默认参数必须指向不变对象！</strong><br>看如下例子：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">addEnd</span><span class=\"params\">(L=[])</span>:</span></span><br><span class=\"line\">    L.append(<span class=\"string\">'END'</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> L</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>&gt;&gt;&gt;addEnd()<br>[‘END’]<br>&gt;&gt;&gt;addEnd()<br>[‘END’, ‘END’]<br>&gt;&gt;&gt;addEnd()<br>[‘END’, ‘END’, ‘END’]     </p>\n</blockquote>\n<p>出现这样的结果是因为：默认参数L仅仅代表[]的一个引用，函数定义时[]就已确定，每次调用addEnd时，使用的都是函数定义时的[]，通过print(id(L))可以看出，每次调用该函数时使用的是同一内存地址的[]。<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">addEnd</span><span class=\"params\">(L=[])</span>:</span></span><br><span class=\"line\">    L.append(<span class=\"string\">'END'</span>)</span><br><span class=\"line\">    print(id(L))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> L</span><br><span class=\"line\"></span><br><span class=\"line\">addEnd()</span><br><span class=\"line\"><span class=\"comment\">#4518465224</span></span><br><span class=\"line\"><span class=\"comment\">#['END']</span></span><br><span class=\"line\">addEnd()</span><br><span class=\"line\"><span class=\"comment\">#4518465224</span></span><br><span class=\"line\"><span class=\"comment\">#['END', 'END']</span></span><br></pre></td></tr></table></figure></p>\n<p>为了避免这个问题，可以通过下面的方式，每次调用函数时，都会新建一个[]：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">addEnd</span><span class=\"params\">(L=None)</span>:</span></span><br><span class=\"line\">    L = [] <span class=\"keyword\">if</span> L == <span class=\"literal\">None</span> <span class=\"keyword\">else</span> L</span><br><span class=\"line\">    L.append(<span class=\"string\">'END'</span>)</span><br><span class=\"line\">    print(id(L))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> L</span><br><span class=\"line\"></span><br><span class=\"line\">addEnd()</span><br><span class=\"line\"><span class=\"comment\">#4518687688</span></span><br><span class=\"line\"><span class=\"comment\">#['END']</span></span><br><span class=\"line\">addEnd()</span><br><span class=\"line\"><span class=\"comment\">#4518688328</span></span><br><span class=\"line\"><span class=\"comment\">#['END']</span></span><br></pre></td></tr></table></figure></p>\n<h4 id=\"可变参数\"><a href=\"#可变参数\" class=\"headerlink\" title=\"可变参数\"></a>可变参数</h4><p>可变参数即传入的参数个数是可变的，可以是0个，1个，或多个<br>先定义一下函数，给定一组数字a，b，c…，计算这组数字的平方和a^2 + b^2 + c^2 + …<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">calc</span><span class=\"params\">(numbers)</span>:</span></span><br><span class=\"line\">    s = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> num <span class=\"keyword\">in</span> numbers:</span><br><span class=\"line\">        s = s + num * num</span><br><span class=\"line\">    <span class=\"keyword\">return</span> s</span><br></pre></td></tr></table></figure></p>\n<p>该函数在调用时，需先组装一个list或tuple    </p>\n<blockquote>\n<p>&gt;&gt;&gt;calc([1, 2, 3])<br>14<br>&gt;&gt;&gt;calc([1, 2, 3])<br>30</p>\n</blockquote>\n<p>如果利用可变参数，函数的调用可以简化<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">calc</span><span class=\"params\">(*numbers)</span>:</span></span><br><span class=\"line\">    s = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> num <span class=\"keyword\">in</span> numbers:</span><br><span class=\"line\">        s = s + num * num</span><br><span class=\"line\">    <span class=\"keyword\">return</span> s</span><br><span class=\"line\"></span><br><span class=\"line\">calc()</span><br><span class=\"line\"><span class=\"comment\"># 0</span></span><br><span class=\"line\">calc(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>)     </span><br><span class=\"line\"><span class=\"comment\"># 14</span></span><br><span class=\"line\">calc(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>)</span><br><span class=\"line\"><span class=\"comment\"># 30</span></span><br></pre></td></tr></table></figure></p>\n<p>可变参数与list或tuple参数相比，仅仅在参数前面加了个<em>号，**\\</em>的作用是将传入的参数组装成一个tuple**<br>，如果已经有一个list或tuple，要调用可变参数怎么办呢？</p>\n<blockquote>\n<p>&gt;&gt;&gt;nums = [1, 2, 3]<br>&gt;&gt;&gt;calc(nums[0], nums[1], nums[2])<br>14  </p>\n</blockquote>\n<p>这种写法就过于繁琐，针对这种情况，python允许在list或tuple前加一个*号，将list或tuple的元素变成可变参数传入</p>\n<blockquote>\n<p>&gt;&gt;&gt;nums = [1, 2, 3]<br>&gt;&gt;&gt;calc(*nums)<br>14    </p>\n</blockquote>\n<h4 id=\"关键字参数\"><a href=\"#关键字参数\" class=\"headerlink\" title=\"关键字参数\"></a>关键字参数</h4><p>关键字参数允许你传入0个或任意个含参数名的参数，这些关键字参数在函数内部自动组装为一个dict<br>定义一个用户注册的函数<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">user</span><span class=\"params\">(name, age, **kw)</span>:</span></span><br><span class=\"line\">    print(<span class=\"string\">'name:'</span>, name, <span class=\"string\">'age:'</span>, age, <span class=\"string\">'other:'</span>, kw)</span><br><span class=\"line\"></span><br><span class=\"line\">user(<span class=\"string\">'Bob'</span>, <span class=\"number\">23</span>)          </span><br><span class=\"line\"><span class=\"comment\"># ('name:', 'Bob', 'age:', 23, 'other:', &#123;&#125;)</span></span><br><span class=\"line\">user(<span class=\"string\">'Alen'</span>, <span class=\"number\">20</span>, gender=<span class=\"string\">'M'</span>, job=<span class=\"string\">'Engineer'</span>) </span><br><span class=\"line\"><span class=\"comment\"># ('name:', 'Alen', 'age:', 20, 'other:', &#123;'gender': 'M', 'job': 'Engineer'&#125;)</span></span><br></pre></td></tr></table></figure></p>\n<p>函数user除了接收必选参数name，age外还接收关键字参数kw，调用该函数时，可以只传入必选参数，也可以传入任意个数的关键字参数，<strong>**的作用是将含参数名的参数，组装成一个dict传入kw</strong>。关键字参数可以扩展函数的功能，调用者如果提供更多的信息，我们仍可以接收到。例如当用户注册时，姓名和年龄时必填项，其他是可选项，就可以通过关键字参数来实现。<br>和可变参数类似，当有现成dict时，可通过以下方式简化调用：</p>\n<blockquote>\n<p>&gt;&gt;&gt;extra = {‘city’: ‘Beijing’, ‘job’: ‘Engineer’}<br>user(‘Bob’, 23, **extra)<br>name: Bob age: 23 other: {‘city’: ‘Beijing’, ‘job’: ‘Engineer’}     </p>\n</blockquote>\n<p>**extra表示把extra这个dict的所有key-value用关键字参数传入到函数的**kw参数，kw将获得一个dict。<strong>注意kw获得的dict是extra的一份拷贝，对kw的改动不会影响到函数外的extra。</strong></p>\n<h4 id=\"命名关键字参数\"><a href=\"#命名关键字参数\" class=\"headerlink\" title=\"命名关键字参数\"></a>命名关键字参数</h4><p>对于关键字参数，函数的调用者可以传入任意不受限制的关键字参数，如果要限制关键字参数的名字，就可以用命名关键字参数。命名关键字参数需要一个特殊分隔符*，*后面的参数被视为命名关键字参数，例如，只接收city和job作为关键字参数：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">user</span><span class=\"params\">(name, age, *, city, job)</span>:</span></span><br><span class=\"line\">    print(<span class=\"string\">'name:'</span>, name, <span class=\"string\">'age:'</span>, age, <span class=\"string\">'city:'</span>, city, <span class=\"string\">'job:'</span>, job)</span><br><span class=\"line\"></span><br><span class=\"line\">user(<span class=\"string\">'Alen'</span>, <span class=\"number\">20</span>, city=<span class=\"string\">'Beijing'</span>, job=<span class=\"string\">'Engineer'</span>) </span><br><span class=\"line\"><span class=\"comment\"># name: Alen age: 20 city: Beijing job: Engineer</span></span><br></pre></td></tr></table></figure></p>\n<p>不同于位置参数，命名关键字参数必须传入参数名。如果没有传入参数名，调用将报错：</p>\n<blockquote>\n<p>&gt;&gt;&gt;user(‘Alen’, 20, ‘Beijing’, ‘Engineer’)<br>Traceback (most recent call last):<br>  File “&lt;stdin&gt;”, line 1, in &lt;module&gt;<br>TypeError: user() takes 2 positional arguments but 4 were given</p>\n</blockquote>\n<p>若函数定义中已经有了一个可变参数，后面跟着的命名关键字参数就不再需要一个特殊分隔符*了：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">user</span><span class=\"params\">(name, age, *args, city, job)</span>:</span></span><br><span class=\"line\">    print(name, age, args, city, job)</span><br></pre></td></tr></table></figure></p>\n<p>命名关键字参数可以有缺省值，从而简化调用：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">user</span><span class=\"params\">(name, age, *, city=<span class=\"string\">'Beijing'</span>, job)</span>:</span></span><br><span class=\"line\">    print(name, age, city, job)</span><br><span class=\"line\"></span><br><span class=\"line\">user(<span class=\"string\">'Bob'</span>, <span class=\"number\">22</span>, job=<span class=\"string\">'Engineer'</span>)</span><br><span class=\"line\"><span class=\"comment\"># Bob 22 Beijing Engineer</span></span><br></pre></td></tr></table></figure></p>\n<h4 id=\"参数组合\"><a href=\"#参数组合\" class=\"headerlink\" title=\"参数组合\"></a>参数组合</h4><p>定义函数，可以用必选参数、默认参数、可变参数、关键字参数和命名关键字参数，这5种参数都可以组合使用。但是应注意，参数定义的顺序必须是：必选参数、默认参数、可变参数、命名关键字参数和关键字参数。<br>定义一个函数，包含上述参数：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">user</span><span class=\"params\">(name, age = <span class=\"number\">20</span>, *args, city = <span class=\"string\">'Beijing'</span>, job, **kw)</span>:</span></span><br><span class=\"line\">    print(name, age, args, city, job, kw)</span><br><span class=\"line\"></span><br><span class=\"line\">user(<span class=\"string\">'Bob'</span>, <span class=\"number\">20</span>, <span class=\"number\">120</span>, job = <span class=\"string\">'Engineer'</span>, gender = <span class=\"string\">'M'</span>)</span><br><span class=\"line\"><span class=\"comment\"># Bob 20 (120,) Beijing Engineer &#123;'gender': 'M'&#125;</span></span><br></pre></td></tr></table></figure></p>\n<p>对于任意函数，都可以通过类似func(*args, **kw)的形式调用它，无论它的参数是如何定义的。</p>\n<blockquote>\n<p>&gt;&gt;&gt;args = (‘Bob’, 20, 120)<br>&gt;&gt;&gt;kw = {‘job’:’Engineer’, ‘gender’:’M’}<br>&gt;&gt;&gt;user(*args, **kw)<br>Bob 20 (120,) Beijing Engineer {‘gender’: ‘M’}</p>\n</blockquote>\n"},{"_content":"> &emsp;&emsp;在学习python数据结构的过程中，可迭代对象，迭代器，生成器这些概念参杂在一起，难免让初学者一头雾水，今天就来捋捋这些概览。\n\n\n#### 可迭代对象(iterable)\n&emsp;&emsp;什么是可迭代对象，通俗的讲就是可以直接通过for循环遍历的对象就可称为可迭代对象Iterable，可以使用isinstance()判断一个对象是否是Iterable对象：\n>&gt;&gt;&gt;from collections import Iterable  \n>&gt;&gt;&gt;isinstance([], Iterable)  \n>True  \n>&gt;&gt;&gt;isinstance({}, Iterable)  \n>True   \n>&gt;&gt;&gt;isinstance('123', Iterable)   \n>True  \n>&gt;&gt;&gt;isinstance(123, Iterable)   \n>False   \n\n可迭代对象并不指某种具体的数据类型，list, dict, set, str都是迭代对象，再比如打开状态的files，sockets也是可迭代对象，可迭代对象是指代对象的一种属性，代表该对象是可迭代的。可迭代对象实现了\\_\\_iter\\_\\_方法，该方法返回一个迭代器对象。\n\n#### 迭代器(iterator)\n&emsp;&emsp;任何实现了\\_\\_iter\\_\\_和\\_\\_next\\_\\_方法的对象都是迭代器（python2是实现\\_\\_iter\\_\\_和next方法），\\_\\_iter\\_\\_返回迭代器自身，\\_\\_next\\_\\_返回容器中的下一个值，如果容器中没有更多元素了，则抛出StopIteration异常。可以使用isinstance()判断一个对象是否是Iterator对象：\n>&gt;&gt;&gt;from collections import Iterator  \n>&gt;&gt;&gt;isinstance([], Iterator)  \n>False  \n>&gt;&gt;&gt;isinstance({}, Iterator)  \n>False   \n>&gt;&gt;&gt;isinstance('123', Iterator)   \n>False  \n>&gt;&gt;&gt;isinstance((x for x in range(10)), Iterator)    \n>True  \n\n其中(x for x in range(10))是生成器表达式，它返回的是一个生成器对象，不同于列表生成式[x for x in range(10)]返回一个list对象。生成器对象都是迭代器对象，但list, dict, str虽然是可迭代对象，但不是迭代器对象，可以使用iter()将list, dict, str等可迭代对象变成迭代器对象。\n\n>&gt;&gt;&gt;isinstance(iter([]), Iterator)  \n>True   \n>&gt;&gt;&gt;isinstance(iter('123'), Iterator)  \n>True   \n\npython的迭代器对象表示一个数据流，可以将这个数据流看作一个有序序列，但我们并不知道序列的长度，只能不断通过调用next()函数实现按需计算下一个数据，因此迭代器的计算是惰性的，只有在需要返回下一个数据时它才计算，迭代器的这种特性可以大大减少内存的开销，迭代器对象甚至可以表示一个无限大的数据流，而让list, dict或者str存储一个无限大的数据流是不可能的。\n\n下面我们通过迭代器来实现斐波那契数列：\n```python\nfrom collections import Iterable\nfrom collections import Iterator\n\nclass Fib:\n    def __init__(self, max):\n        self.n, self.max = 0, max\n        self.a, self.b = 0, 1\n\n    def __iter__(self):\n        return self\n\n    def __next__(self):\n        if self.n < self.max:\n            self.n += 1\n            self.a, self.b = self.b, self.a + self.b\n            return self.a\n        else:\n            raise StopIteration\n\nif __name__ == '__main__':\n    fib = Fib(10)\n    print(isinstance(fib, Iterable)) # True\n    print(isinstance(fib, Iterator)) # True\n    print([e for e in fib]) # [1, 1, 2, 3, 5, 8, 13, 21, 34, 55]\n```\n\n&emsp;&emsp;Fib既是一个可迭代对象（因为它实现了\\_\\_iter\\_\\_方法），又是一个迭代器（因为实现了\\_\\_next\\_\\_方法）。实例变量a和b用于维护迭代器内部的状态。每次调用next()方法的时候做两件事：\n为下一次调用next()方法修改状态，为当前这次调用生成返回结果。    \n\n**迭代器就像一个懒加载的工厂，等到有人需要的时候才给它生成值返回，没调用的时候就处于休眠状态等待下一次调用。**\n\n\n#### 生成器(generator)\n&emsp;&emsp;生成器是一种特殊的迭代器，不过这种迭代器更加优雅。它不需要再像上面的类一样写\\_\\_iter\\_\\_()和\\_\\_next\\_\\_()方法了，只需要一个yiled关键字。 \n\n用生成器来实现斐波那契数列的例子是：\n```python\ndef fib(max):\n    n, a, b = 0, 0, 1\n    while n < max:\n        n = n + 1\n        a, b = b, b + a\n        yield a\n\nf = fib(10)\nprint(f) # <generator object fib at 0x10d8cf888>\nprint([e for e in f])   # [1, 1, 2, 3, 5, 8, 13, 21, 34, 55]\n```\nfib函数中的yield关键字，将该函数变成了一个生成器，当执行f=fib(10)返回的是一个生成器对象，此时函数中的代码并不会执行，只有显示或隐示地调用next的时候才会真正执行里面的代码，在每次调用next()方法时，遇到yield语句返回值并中断，再次执行时从上次返回的yield语句处继续执行。\n生成器是python非常强大的特性，相比其他容器对象它更加节省内存，同时使用更少的代码，使你的代码更加的优雅，凡事以下结构都可以通过生成器重构：\n```python\ndef fun():\n    result = []\n    for ... in ...:\n        result.append(x)\n    return result\n\ndef fun_gen():\n    for ... in ...:\n        yield x\n```\n\n#### 总结\n1. 可迭代对象实现了\\_\\_iter\\_\\_方法，该方法返回一个迭代器对象。\n2. 迭代器持有一个内部状态的字段，用于记录下次迭代返回值，它实现了\\_\\_next\\_\\_和\\_\\_iter\\_\\_方法，迭代器不会一次性把所有元素加载到内存，而是需要的时候才生成返回结果。\n3. 生成器是一种特殊的迭代器，它的返回值不是通过return而是用yield。\n","source":"_posts/python-生成器迭代器.md","raw":"> &emsp;&emsp;在学习python数据结构的过程中，可迭代对象，迭代器，生成器这些概念参杂在一起，难免让初学者一头雾水，今天就来捋捋这些概览。\n\n\n#### 可迭代对象(iterable)\n&emsp;&emsp;什么是可迭代对象，通俗的讲就是可以直接通过for循环遍历的对象就可称为可迭代对象Iterable，可以使用isinstance()判断一个对象是否是Iterable对象：\n>&gt;&gt;&gt;from collections import Iterable  \n>&gt;&gt;&gt;isinstance([], Iterable)  \n>True  \n>&gt;&gt;&gt;isinstance({}, Iterable)  \n>True   \n>&gt;&gt;&gt;isinstance('123', Iterable)   \n>True  \n>&gt;&gt;&gt;isinstance(123, Iterable)   \n>False   \n\n可迭代对象并不指某种具体的数据类型，list, dict, set, str都是迭代对象，再比如打开状态的files，sockets也是可迭代对象，可迭代对象是指代对象的一种属性，代表该对象是可迭代的。可迭代对象实现了\\_\\_iter\\_\\_方法，该方法返回一个迭代器对象。\n\n#### 迭代器(iterator)\n&emsp;&emsp;任何实现了\\_\\_iter\\_\\_和\\_\\_next\\_\\_方法的对象都是迭代器（python2是实现\\_\\_iter\\_\\_和next方法），\\_\\_iter\\_\\_返回迭代器自身，\\_\\_next\\_\\_返回容器中的下一个值，如果容器中没有更多元素了，则抛出StopIteration异常。可以使用isinstance()判断一个对象是否是Iterator对象：\n>&gt;&gt;&gt;from collections import Iterator  \n>&gt;&gt;&gt;isinstance([], Iterator)  \n>False  \n>&gt;&gt;&gt;isinstance({}, Iterator)  \n>False   \n>&gt;&gt;&gt;isinstance('123', Iterator)   \n>False  \n>&gt;&gt;&gt;isinstance((x for x in range(10)), Iterator)    \n>True  \n\n其中(x for x in range(10))是生成器表达式，它返回的是一个生成器对象，不同于列表生成式[x for x in range(10)]返回一个list对象。生成器对象都是迭代器对象，但list, dict, str虽然是可迭代对象，但不是迭代器对象，可以使用iter()将list, dict, str等可迭代对象变成迭代器对象。\n\n>&gt;&gt;&gt;isinstance(iter([]), Iterator)  \n>True   \n>&gt;&gt;&gt;isinstance(iter('123'), Iterator)  \n>True   \n\npython的迭代器对象表示一个数据流，可以将这个数据流看作一个有序序列，但我们并不知道序列的长度，只能不断通过调用next()函数实现按需计算下一个数据，因此迭代器的计算是惰性的，只有在需要返回下一个数据时它才计算，迭代器的这种特性可以大大减少内存的开销，迭代器对象甚至可以表示一个无限大的数据流，而让list, dict或者str存储一个无限大的数据流是不可能的。\n\n下面我们通过迭代器来实现斐波那契数列：\n```python\nfrom collections import Iterable\nfrom collections import Iterator\n\nclass Fib:\n    def __init__(self, max):\n        self.n, self.max = 0, max\n        self.a, self.b = 0, 1\n\n    def __iter__(self):\n        return self\n\n    def __next__(self):\n        if self.n < self.max:\n            self.n += 1\n            self.a, self.b = self.b, self.a + self.b\n            return self.a\n        else:\n            raise StopIteration\n\nif __name__ == '__main__':\n    fib = Fib(10)\n    print(isinstance(fib, Iterable)) # True\n    print(isinstance(fib, Iterator)) # True\n    print([e for e in fib]) # [1, 1, 2, 3, 5, 8, 13, 21, 34, 55]\n```\n\n&emsp;&emsp;Fib既是一个可迭代对象（因为它实现了\\_\\_iter\\_\\_方法），又是一个迭代器（因为实现了\\_\\_next\\_\\_方法）。实例变量a和b用于维护迭代器内部的状态。每次调用next()方法的时候做两件事：\n为下一次调用next()方法修改状态，为当前这次调用生成返回结果。    \n\n**迭代器就像一个懒加载的工厂，等到有人需要的时候才给它生成值返回，没调用的时候就处于休眠状态等待下一次调用。**\n\n\n#### 生成器(generator)\n&emsp;&emsp;生成器是一种特殊的迭代器，不过这种迭代器更加优雅。它不需要再像上面的类一样写\\_\\_iter\\_\\_()和\\_\\_next\\_\\_()方法了，只需要一个yiled关键字。 \n\n用生成器来实现斐波那契数列的例子是：\n```python\ndef fib(max):\n    n, a, b = 0, 0, 1\n    while n < max:\n        n = n + 1\n        a, b = b, b + a\n        yield a\n\nf = fib(10)\nprint(f) # <generator object fib at 0x10d8cf888>\nprint([e for e in f])   # [1, 1, 2, 3, 5, 8, 13, 21, 34, 55]\n```\nfib函数中的yield关键字，将该函数变成了一个生成器，当执行f=fib(10)返回的是一个生成器对象，此时函数中的代码并不会执行，只有显示或隐示地调用next的时候才会真正执行里面的代码，在每次调用next()方法时，遇到yield语句返回值并中断，再次执行时从上次返回的yield语句处继续执行。\n生成器是python非常强大的特性，相比其他容器对象它更加节省内存，同时使用更少的代码，使你的代码更加的优雅，凡事以下结构都可以通过生成器重构：\n```python\ndef fun():\n    result = []\n    for ... in ...:\n        result.append(x)\n    return result\n\ndef fun_gen():\n    for ... in ...:\n        yield x\n```\n\n#### 总结\n1. 可迭代对象实现了\\_\\_iter\\_\\_方法，该方法返回一个迭代器对象。\n2. 迭代器持有一个内部状态的字段，用于记录下次迭代返回值，它实现了\\_\\_next\\_\\_和\\_\\_iter\\_\\_方法，迭代器不会一次性把所有元素加载到内存，而是需要的时候才生成返回结果。\n3. 生成器是一种特殊的迭代器，它的返回值不是通过return而是用yield。\n","slug":"python-生成器迭代器","published":1,"date":"2018-11-04T13:18:57.000Z","updated":"2018-11-04T13:18:57.000Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cjum1spyj0003908octqc4kgf","content":"<blockquote>\n<p>&emsp;&emsp;在学习python数据结构的过程中，可迭代对象，迭代器，生成器这些概念参杂在一起，难免让初学者一头雾水，今天就来捋捋这些概览。</p>\n</blockquote>\n<h4 id=\"可迭代对象-iterable\"><a href=\"#可迭代对象-iterable\" class=\"headerlink\" title=\"可迭代对象(iterable)\"></a>可迭代对象(iterable)</h4><p>&emsp;&emsp;什么是可迭代对象，通俗的讲就是可以直接通过for循环遍历的对象就可称为可迭代对象Iterable，可以使用isinstance()判断一个对象是否是Iterable对象：</p>\n<blockquote>\n<p>&gt;&gt;&gt;from collections import Iterable<br>&gt;&gt;&gt;isinstance([], Iterable)<br>True<br>&gt;&gt;&gt;isinstance({}, Iterable)<br>True<br>&gt;&gt;&gt;isinstance(‘123’, Iterable)<br>True<br>&gt;&gt;&gt;isinstance(123, Iterable)<br>False   </p>\n</blockquote>\n<p>可迭代对象并不指某种具体的数据类型，list, dict, set, str都是迭代对象，再比如打开状态的files，sockets也是可迭代对象，可迭代对象是指代对象的一种属性，代表该对象是可迭代的。可迭代对象实现了__iter__方法，该方法返回一个迭代器对象。</p>\n<h4 id=\"迭代器-iterator\"><a href=\"#迭代器-iterator\" class=\"headerlink\" title=\"迭代器(iterator)\"></a>迭代器(iterator)</h4><p>&emsp;&emsp;任何实现了__iter__和__next__方法的对象都是迭代器（python2是实现__iter__和next方法），__iter__返回迭代器自身，__next__返回容器中的下一个值，如果容器中没有更多元素了，则抛出StopIteration异常。可以使用isinstance()判断一个对象是否是Iterator对象：</p>\n<blockquote>\n<p>&gt;&gt;&gt;from collections import Iterator<br>&gt;&gt;&gt;isinstance([], Iterator)<br>False<br>&gt;&gt;&gt;isinstance({}, Iterator)<br>False<br>&gt;&gt;&gt;isinstance(‘123’, Iterator)<br>False<br>&gt;&gt;&gt;isinstance((x for x in range(10)), Iterator)<br>True  </p>\n</blockquote>\n<p>其中(x for x in range(10))是生成器表达式，它返回的是一个生成器对象，不同于列表生成式[x for x in range(10)]返回一个list对象。生成器对象都是迭代器对象，但list, dict, str虽然是可迭代对象，但不是迭代器对象，可以使用iter()将list, dict, str等可迭代对象变成迭代器对象。</p>\n<blockquote>\n<p>&gt;&gt;&gt;isinstance(iter([]), Iterator)<br>True<br>&gt;&gt;&gt;isinstance(iter(‘123’), Iterator)<br>True   </p>\n</blockquote>\n<p>python的迭代器对象表示一个数据流，可以将这个数据流看作一个有序序列，但我们并不知道序列的长度，只能不断通过调用next()函数实现按需计算下一个数据，因此迭代器的计算是惰性的，只有在需要返回下一个数据时它才计算，迭代器的这种特性可以大大减少内存的开销，迭代器对象甚至可以表示一个无限大的数据流，而让list, dict或者str存储一个无限大的数据流是不可能的。</p>\n<p>下面我们通过迭代器来实现斐波那契数列：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> collections <span class=\"keyword\">import</span> Iterable</span><br><span class=\"line\"><span class=\"keyword\">from</span> collections <span class=\"keyword\">import</span> Iterator</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Fib</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self, max)</span>:</span></span><br><span class=\"line\">        self.n, self.max = <span class=\"number\">0</span>, max</span><br><span class=\"line\">        self.a, self.b = <span class=\"number\">0</span>, <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__iter__</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> self</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__next__</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> self.n &lt; self.max:</span><br><span class=\"line\">            self.n += <span class=\"number\">1</span></span><br><span class=\"line\">            self.a, self.b = self.b, self.a + self.b</span><br><span class=\"line\">            <span class=\"keyword\">return</span> self.a</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">raise</span> StopIteration</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    fib = Fib(<span class=\"number\">10</span>)</span><br><span class=\"line\">    print(isinstance(fib, Iterable)) <span class=\"comment\"># True</span></span><br><span class=\"line\">    print(isinstance(fib, Iterator)) <span class=\"comment\"># True</span></span><br><span class=\"line\">    print([e <span class=\"keyword\">for</span> e <span class=\"keyword\">in</span> fib]) <span class=\"comment\"># [1, 1, 2, 3, 5, 8, 13, 21, 34, 55]</span></span><br></pre></td></tr></table></figure></p>\n<p>&emsp;&emsp;Fib既是一个可迭代对象（因为它实现了__iter__方法），又是一个迭代器（因为实现了__next__方法）。实例变量a和b用于维护迭代器内部的状态。每次调用next()方法的时候做两件事：<br>为下一次调用next()方法修改状态，为当前这次调用生成返回结果。    </p>\n<p><strong>迭代器就像一个懒加载的工厂，等到有人需要的时候才给它生成值返回，没调用的时候就处于休眠状态等待下一次调用。</strong></p>\n<h4 id=\"生成器-generator\"><a href=\"#生成器-generator\" class=\"headerlink\" title=\"生成器(generator)\"></a>生成器(generator)</h4><p>&emsp;&emsp;生成器是一种特殊的迭代器，不过这种迭代器更加优雅。它不需要再像上面的类一样写__iter__()和__next__()方法了，只需要一个yiled关键字。 </p>\n<p>用生成器来实现斐波那契数列的例子是：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">fib</span><span class=\"params\">(max)</span>:</span></span><br><span class=\"line\">    n, a, b = <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> n &lt; max:</span><br><span class=\"line\">        n = n + <span class=\"number\">1</span></span><br><span class=\"line\">        a, b = b, b + a</span><br><span class=\"line\">        <span class=\"keyword\">yield</span> a</span><br><span class=\"line\"></span><br><span class=\"line\">f = fib(<span class=\"number\">10</span>)</span><br><span class=\"line\">print(f) <span class=\"comment\"># &lt;generator object fib at 0x10d8cf888&gt;</span></span><br><span class=\"line\">print([e <span class=\"keyword\">for</span> e <span class=\"keyword\">in</span> f])   <span class=\"comment\"># [1, 1, 2, 3, 5, 8, 13, 21, 34, 55]</span></span><br></pre></td></tr></table></figure></p>\n<p>fib函数中的yield关键字，将该函数变成了一个生成器，当执行f=fib(10)返回的是一个生成器对象，此时函数中的代码并不会执行，只有显示或隐示地调用next的时候才会真正执行里面的代码，在每次调用next()方法时，遇到yield语句返回值并中断，再次执行时从上次返回的yield语句处继续执行。<br>生成器是python非常强大的特性，相比其他容器对象它更加节省内存，同时使用更少的代码，使你的代码更加的优雅，凡事以下结构都可以通过生成器重构：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">fun</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    result = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> ... <span class=\"keyword\">in</span> ...:</span><br><span class=\"line\">        result.append(x)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">fun_gen</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> ... <span class=\"keyword\">in</span> ...:</span><br><span class=\"line\">        <span class=\"keyword\">yield</span> x</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h4><ol>\n<li>可迭代对象实现了__iter__方法，该方法返回一个迭代器对象。</li>\n<li>迭代器持有一个内部状态的字段，用于记录下次迭代返回值，它实现了__next__和__iter__方法，迭代器不会一次性把所有元素加载到内存，而是需要的时候才生成返回结果。</li>\n<li>生成器是一种特殊的迭代器，它的返回值不是通过return而是用yield。</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>&emsp;&emsp;在学习python数据结构的过程中，可迭代对象，迭代器，生成器这些概念参杂在一起，难免让初学者一头雾水，今天就来捋捋这些概览。</p>\n</blockquote>\n<h4 id=\"可迭代对象-iterable\"><a href=\"#可迭代对象-iterable\" class=\"headerlink\" title=\"可迭代对象(iterable)\"></a>可迭代对象(iterable)</h4><p>&emsp;&emsp;什么是可迭代对象，通俗的讲就是可以直接通过for循环遍历的对象就可称为可迭代对象Iterable，可以使用isinstance()判断一个对象是否是Iterable对象：</p>\n<blockquote>\n<p>&gt;&gt;&gt;from collections import Iterable<br>&gt;&gt;&gt;isinstance([], Iterable)<br>True<br>&gt;&gt;&gt;isinstance({}, Iterable)<br>True<br>&gt;&gt;&gt;isinstance(‘123’, Iterable)<br>True<br>&gt;&gt;&gt;isinstance(123, Iterable)<br>False   </p>\n</blockquote>\n<p>可迭代对象并不指某种具体的数据类型，list, dict, set, str都是迭代对象，再比如打开状态的files，sockets也是可迭代对象，可迭代对象是指代对象的一种属性，代表该对象是可迭代的。可迭代对象实现了__iter__方法，该方法返回一个迭代器对象。</p>\n<h4 id=\"迭代器-iterator\"><a href=\"#迭代器-iterator\" class=\"headerlink\" title=\"迭代器(iterator)\"></a>迭代器(iterator)</h4><p>&emsp;&emsp;任何实现了__iter__和__next__方法的对象都是迭代器（python2是实现__iter__和next方法），__iter__返回迭代器自身，__next__返回容器中的下一个值，如果容器中没有更多元素了，则抛出StopIteration异常。可以使用isinstance()判断一个对象是否是Iterator对象：</p>\n<blockquote>\n<p>&gt;&gt;&gt;from collections import Iterator<br>&gt;&gt;&gt;isinstance([], Iterator)<br>False<br>&gt;&gt;&gt;isinstance({}, Iterator)<br>False<br>&gt;&gt;&gt;isinstance(‘123’, Iterator)<br>False<br>&gt;&gt;&gt;isinstance((x for x in range(10)), Iterator)<br>True  </p>\n</blockquote>\n<p>其中(x for x in range(10))是生成器表达式，它返回的是一个生成器对象，不同于列表生成式[x for x in range(10)]返回一个list对象。生成器对象都是迭代器对象，但list, dict, str虽然是可迭代对象，但不是迭代器对象，可以使用iter()将list, dict, str等可迭代对象变成迭代器对象。</p>\n<blockquote>\n<p>&gt;&gt;&gt;isinstance(iter([]), Iterator)<br>True<br>&gt;&gt;&gt;isinstance(iter(‘123’), Iterator)<br>True   </p>\n</blockquote>\n<p>python的迭代器对象表示一个数据流，可以将这个数据流看作一个有序序列，但我们并不知道序列的长度，只能不断通过调用next()函数实现按需计算下一个数据，因此迭代器的计算是惰性的，只有在需要返回下一个数据时它才计算，迭代器的这种特性可以大大减少内存的开销，迭代器对象甚至可以表示一个无限大的数据流，而让list, dict或者str存储一个无限大的数据流是不可能的。</p>\n<p>下面我们通过迭代器来实现斐波那契数列：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> collections <span class=\"keyword\">import</span> Iterable</span><br><span class=\"line\"><span class=\"keyword\">from</span> collections <span class=\"keyword\">import</span> Iterator</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Fib</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self, max)</span>:</span></span><br><span class=\"line\">        self.n, self.max = <span class=\"number\">0</span>, max</span><br><span class=\"line\">        self.a, self.b = <span class=\"number\">0</span>, <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__iter__</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> self</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__next__</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> self.n &lt; self.max:</span><br><span class=\"line\">            self.n += <span class=\"number\">1</span></span><br><span class=\"line\">            self.a, self.b = self.b, self.a + self.b</span><br><span class=\"line\">            <span class=\"keyword\">return</span> self.a</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">raise</span> StopIteration</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    fib = Fib(<span class=\"number\">10</span>)</span><br><span class=\"line\">    print(isinstance(fib, Iterable)) <span class=\"comment\"># True</span></span><br><span class=\"line\">    print(isinstance(fib, Iterator)) <span class=\"comment\"># True</span></span><br><span class=\"line\">    print([e <span class=\"keyword\">for</span> e <span class=\"keyword\">in</span> fib]) <span class=\"comment\"># [1, 1, 2, 3, 5, 8, 13, 21, 34, 55]</span></span><br></pre></td></tr></table></figure></p>\n<p>&emsp;&emsp;Fib既是一个可迭代对象（因为它实现了__iter__方法），又是一个迭代器（因为实现了__next__方法）。实例变量a和b用于维护迭代器内部的状态。每次调用next()方法的时候做两件事：<br>为下一次调用next()方法修改状态，为当前这次调用生成返回结果。    </p>\n<p><strong>迭代器就像一个懒加载的工厂，等到有人需要的时候才给它生成值返回，没调用的时候就处于休眠状态等待下一次调用。</strong></p>\n<h4 id=\"生成器-generator\"><a href=\"#生成器-generator\" class=\"headerlink\" title=\"生成器(generator)\"></a>生成器(generator)</h4><p>&emsp;&emsp;生成器是一种特殊的迭代器，不过这种迭代器更加优雅。它不需要再像上面的类一样写__iter__()和__next__()方法了，只需要一个yiled关键字。 </p>\n<p>用生成器来实现斐波那契数列的例子是：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">fib</span><span class=\"params\">(max)</span>:</span></span><br><span class=\"line\">    n, a, b = <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> n &lt; max:</span><br><span class=\"line\">        n = n + <span class=\"number\">1</span></span><br><span class=\"line\">        a, b = b, b + a</span><br><span class=\"line\">        <span class=\"keyword\">yield</span> a</span><br><span class=\"line\"></span><br><span class=\"line\">f = fib(<span class=\"number\">10</span>)</span><br><span class=\"line\">print(f) <span class=\"comment\"># &lt;generator object fib at 0x10d8cf888&gt;</span></span><br><span class=\"line\">print([e <span class=\"keyword\">for</span> e <span class=\"keyword\">in</span> f])   <span class=\"comment\"># [1, 1, 2, 3, 5, 8, 13, 21, 34, 55]</span></span><br></pre></td></tr></table></figure></p>\n<p>fib函数中的yield关键字，将该函数变成了一个生成器，当执行f=fib(10)返回的是一个生成器对象，此时函数中的代码并不会执行，只有显示或隐示地调用next的时候才会真正执行里面的代码，在每次调用next()方法时，遇到yield语句返回值并中断，再次执行时从上次返回的yield语句处继续执行。<br>生成器是python非常强大的特性，相比其他容器对象它更加节省内存，同时使用更少的代码，使你的代码更加的优雅，凡事以下结构都可以通过生成器重构：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">fun</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    result = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> ... <span class=\"keyword\">in</span> ...:</span><br><span class=\"line\">        result.append(x)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">fun_gen</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> ... <span class=\"keyword\">in</span> ...:</span><br><span class=\"line\">        <span class=\"keyword\">yield</span> x</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h4><ol>\n<li>可迭代对象实现了__iter__方法，该方法返回一个迭代器对象。</li>\n<li>迭代器持有一个内部状态的字段，用于记录下次迭代返回值，它实现了__next__和__iter__方法，迭代器不会一次性把所有元素加载到内存，而是需要的时候才生成返回结果。</li>\n<li>生成器是一种特殊的迭代器，它的返回值不是通过return而是用yield。</li>\n</ol>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}